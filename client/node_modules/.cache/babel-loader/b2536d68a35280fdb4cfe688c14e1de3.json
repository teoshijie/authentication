{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teo Shi Jie\\\\Downloads\\\\auth1\\\\client\\\\src\\\\Context\\\\AuthContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport AuthService from '../Services/AuthService';\nexport const AuthContext = createContext();\nexport default (({\n  children\n}) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    AuthService.isAuthenticated().then(data => {\n      setUser(data.user);\n      setIsAuthenticated(data.isAuthenticated);\n      setIsLoaded(true);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, !isLoaded ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 26\n    }\n  }, \"Loading\") : /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      isAuthenticated,\n      setIsAuthenticated\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, children));\n});","map":{"version":3,"sources":["C:/Users/Teo Shi Jie/Downloads/auth1/client/src/Context/AuthContext.js"],"names":["React","createContext","useState","useEffect","AuthService","AuthContext","children","user","setUser","isAuthenticated","setIsAuthenticated","isLoaded","setIsLoaded","then","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAwD,OAAxD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AACP,gBAAe,CAAC;AAACK,EAAAA;AAAD,CAAD,KAAgB;AAC3B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAACK,eAAZ,GAA8BI,IAA9B,CAAmCC,IAAI,IAAI;AACvCN,MAAAA,OAAO,CAACM,IAAI,CAACP,IAAN,CAAP;AACAG,MAAAA,kBAAkB,CAACI,IAAI,CAACL,eAAN,CAAlB;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACD,QAAD,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ,gBACD,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAG;AAACJ,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA,eAAhB;AAAiCC,MAAAA;AAAjC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QADL,CAFJ,CADJ;AASH,CAtBD","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\nimport AuthService from '../Services/AuthService'\r\n\r\nexport const AuthContext = createContext();\r\nexport default ({children}) => {\r\n    const [user,setUser] = useState(null);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        AuthService.isAuthenticated().then(data => {\r\n            setUser(data.user);\r\n            setIsAuthenticated(data.isAuthenticated);\r\n            setIsLoaded(true);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div> \r\n            {!isLoaded ? <h1>Loading</h1>: \r\n            <AuthContext.Provider value ={{user, setUser, isAuthenticated, setIsAuthenticated}}>\r\n                {children}\r\n            </AuthContext.Provider>\r\n            }\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}